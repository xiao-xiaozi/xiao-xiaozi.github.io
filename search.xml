<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微信小程序webview内嵌H5图片保存问题</title>
      <link href="/2024/03/12/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fwebview%E5%86%85%E5%B5%8CH5%E5%9B%BE%E7%89%87%E4%BF%9D%E5%AD%98%E9%97%AE%E9%A2%98/"/>
      <url>/2024/03/12/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fwebview%E5%86%85%E5%B5%8CH5%E5%9B%BE%E7%89%87%E4%BF%9D%E5%AD%98%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>微信小程序通过<code>webview</code>加载<code>H5</code>项目，在<code>H5</code>项目内保存图片时遇到问题记录。</p><p>项目所使用的技术栈:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">H5项目: uniapp 开发的项目</span><br><span class="line">微信小程序小程序: 第三方小程序，非项目组所能控制</span><br></pre></td></tr></table></figure><p>需求交付时，提到了一个图片展示页面，通过提供一个下载按钮，让用户点击后可以将图片下载到本地。基于项目为微信小程序内嵌H5的方式，第一时间提出了这个保存需要评估能否实现，以及具体实现的方式需要预研下。</p><blockquote><p>如果是真实图片路径，不会遇到后面的问题，只有临时路径才触发了问题。因图片为实时生成，故不存在真实路径，前端是经由下载后拿到临时路径进行展示的。</p></blockquote><p>在<code>uniapp</code>以及微信小程序文档查找，发现几乎所有的保存相关的接口都无法在H5端调用。能用使用上的方法仅有<code>downloadFile</code>接口，拿到文件的临时路径。</p><p>这是自然而然想到了可以通过微信的长按图片进行保存的操作。然而在实际测试中发现，只有在IOS上才可以保存成功，安卓一直提示保存失败。（长按后的操作弹窗有正常弹出，点保存后提示保存失败。）</p><p>自此，这个长按保存的方案也不可行。于是又转了一圈微信社区以及uniapp的问答区，也看见了有相关问题的讨论，但没有纯H5保存的方法。看起来可行（没有亲测过，项目的小程序是第三方的，联调比较困难。）的一个操作是H5与微信小程序通讯，让小程序进行图片保存操作。但这个方案对当前的项目来说比较困难。</p><p>后面因为一些原因，又回到长按保存的实现上，研究安卓上的保存问题。在测试过真实图片地址可以正常访问后，开始推测，会否是临时路径导致的保存失败。于是开始找非临时路径展示的方式。</p><p>最后，通过canvas将图片绘制出来，又转为<code>base64</code>图片后，测试在安卓以及IOS上均可以保存成功。至此问题解决！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/03/08/hello-world/"/>
      <url>/2024/03/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="创建一篇文章"><a href="#创建一篇文章" class="headerlink" title="创建一篇文章"></a>创建一篇文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>默认以文章的标题作为文件名称，但可以通过编辑<code>new_post_name</code>参数来改变默认的文件名称，举例来说，设为<code>:year-:month-:day-:title.md</code>可以更方便的通过日期来管理文章。可以使用以下占位符。</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td><code>:title</code></td><td>标题（小写，空格将会被替换为短杠）</td></tr><tr><td><code>:year</code></td><td>建立的年份，比如，2015</td></tr><tr><td><code>:month</code></td><td>建立的月份（有前导零），比如，<code>04</code></td></tr><tr><td><code>i_month</code></td><td>建立的月份（无前导零），比如<code>4</code></td></tr><tr><td><code>:day</code></td><td>建立的日期（有前导零），比如<code>07</code></td></tr><tr><td><code>i_day</code></td><td>建立的日期（无前导零），比如<code>7</code></td></tr></tbody></table><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="创建草稿"><a href="#创建草稿" class="headerlink" title="创建草稿"></a>创建草稿</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new draft &lt;title&gt;</span><br></pre></td></tr></table></figure><h4 id="发布草稿"><a href="#发布草稿" class="headerlink" title="发布草稿"></a>发布草稿</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish &lt;title&gt;</span><br></pre></td></tr></table></figure><p>将草稿文件从<code>_drafts</code>文件夹迁移到<code>_post</code>文件夹。</p><h3 id="模板-Scaffold"><a href="#模板-Scaffold" class="headerlink" title="模板(Scaffold)"></a>模板(Scaffold)</h3><p>在新建文章时，Hexo会根据<code>Scaffolds</code>文件夹内的相应文件来创建文件，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new photo <span class="string">&quot;My Gallery&quot;</span></span><br></pre></td></tr></table></figure><p>在执行这行命令时，Hexo会尝试在<code>Scaffolds</code>文件夹中寻找<code>photo.md</code><br>，并根据其内容建立文章，以下是可以在模板内使用的变量：</p><table><thead><tr><th>变量</th><th>描述</th></tr></thead><tbody><tr><td><code>layou</code></td><td>布局</td></tr><tr><td><code>title</code></td><td>标题</td></tr><tr><td><code>date</code></td><td>文件建立日期</td></tr></tbody></table><h3 id="支持的格式"><a href="#支持的格式" class="headerlink" title="支持的格式"></a>支持的格式</h3><p>Hexo 支持以任何格式书写文章，只要安装了相应的渲染插件。</p><p>例如，Hexo默认安装了<code>hexo-renderer-marked</code>和<code>hexo-renderer-ejs</code>，因此不仅可以用<code>Markdown</code>写作，还可以用<code>EJS</code>写作。如果安装了<code>hexo-renderer-pug</code>，甚至可以用<code>Pug</code>模板语言写文章。</p><p>只需要将文章的扩展名从<code>md</code>改成<code>ejs</code>，Hexo就会使用<code>hexo-renderer-ejs</code>渲染这个文件，其他格式同理。</p><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p>Front-matter 是文件最上方以<code>---</code>分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line"><span class="section">date: 2013/7/13 20:46:25</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p>以下是预先定义的参数，可在模板中使用这些参数并加以利用。</p><table><thead><tr><th>参数</th><th align="left">描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>layout</code></td><td align="left">布局</td><td><a href="https://hexo.io/zh-cn/docs/configuration#%E6%96%87%E7%AB%A0">config.default_layout</a></td></tr><tr><td><code>title</code></td><td align="left">标题</td><td>文章的文件名</td></tr><tr><td><code>date</code></td><td align="left">建立日期</td><td>文件建立日期</td></tr><tr><td><code>updated</code></td><td align="left">更新日期</td><td>文件更新日期</td></tr><tr><td><code>comments</code></td><td align="left">开启文章的评论功能</td><td><code>true</code></td></tr><tr><td><code>tags</code></td><td align="left">标签（不适用于分页）</td><td></td></tr><tr><td><code>categories</code></td><td align="left">分类（不适用于分页）</td><td></td></tr><tr><td>permalink</td><td align="left">覆盖文章的永久链接，永久链接应该以 &#x2F; 或 .html结尾</td><td>null</td></tr><tr><td><code>excerpt</code></td><td align="left">纯文本的页面摘要。使用该<a href="https://hexo.io/zh-cn/docs/tag-plugins#%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%92%8C%E6%88%AA%E6%96%AD">插件</a>来格式化文本</td><td></td></tr><tr><td>disableNunjucks</td><td align="left">启用时禁用Nunjucks标签 <code>&#123;&#123;&#125;&#125;</code> &#x2F; <code>&#123;% %&#125;</code>和<a href="https://hexo.io/zh-cn/docs/tag-plugins">标签插件</a>的渲染功能</td><td></td></tr><tr><td><code>lang</code></td><td align="left">设置语言以覆盖<a href="https://hexo.io/zh-cn/docs/internationalization#%E8%B7%AF%E5%BE%84">自动监测</a></td><td>继承自<code>_config.yml</code></td></tr><tr><td>published</td><td align="left">文章是否发布</td><td>对于<code>_posts</code>下的文章为<code>true</code>，对于<code>_draft</code>下的文章为<code>false</code></td></tr></tbody></table><h4 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h4><p>根据<code>_config.yml</code>中<code>default_layout</code>的设置，默认布局是<code>post</code>。当文章中的布局被禁用（<code>layout: false</code>），它将不会使用主题处理。然而它仍然会被任何可用的渲染引擎渲染：如果一篇文章是用Markdown写的，并且安装了Markdown渲染引擎（比如默认的<a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>），它将渲染成HTML。</p><p>除非通过<code>disableNunjucks</code>设置或<a href="https://hexo.io/zh-cn/api/renderer#%E7%A6%81%E7%94%A8-Nunjucks-%E6%A0%87%E7%AD%BE">渲染引擎</a>禁用，否则无论布局如何，<a href="https://hexo.io/zh-cn/docs/tag-plugins">标签插件</a>总是被处理。</p><h4 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h4><p>只有文章支持分类和标签，可以在Front-matter中设置。在其它系统中，分类和标签听起来很接近，但是在Hexo中两者有着明显的差异：分类具有顺序性和层次性，也就是说<code>Foo Bar</code>不等于<code>Bar Foo</code>；而标签没有顺序和层次。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> Diary</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">-</span> PS3</span><br><span class="line"><span class="bullet">-</span> Games</span><br></pre></td></tr></table></figure><blockquote><p><strong>分类方法的分歧</strong></p><p>如果有使用过WordPress的经验，就很容易误解Hexo的分类方式。WordPress支持对一篇文章设置多个分类，而且这些分类可以是同级别的，也可以是父子分类。但是Hexo不支持指定多个同级分类。下面的指定方法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> Diary</span><br><span class="line"><span class="bullet">-</span> Life</span><br></pre></td></tr></table></figure><p>会使分类<code>Life</code>成为<code>Diary</code>的子分类，而不是并列分类。因此，有必要为文章选择尽可能准确的分类。</p><p>如果需要为文章添加多个分类，可以尝试以下<code>list</code>中的方法。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line"><span class="bullet">-</span> [Diary, PlayStation]</span><br><span class="line"><span class="bullet">-</span> [ Diary, Games ]</span><br><span class="line"><span class="bullet">-</span> [Life]</span><br></pre></td></tr></table></figure><p>此时这篇文章同时包含三个分类：<code>PlayStation</code>和<code>Games</code>分别都是父分类<code>Diary</code>的子分类，同时<code>Life</code>是一个没有子分类的分类。</p></blockquote><h4 id="JSON-Front-matter"><a href="#JSON-Front-matter" class="headerlink" title="JSON Front-matter"></a>JSON Front-matter</h4><p>除了YAML外，也可以使用JSON来编写Front-matter，只要将<code>---</code>代换成<code>;;;</code>即可。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;title&quot;: &quot;Hello Word&quot;,</span><br><span class="line">&quot;date&quot;: &quot;2013/7/13 20:46:25&quot;</span><br><span class="line">;;;</span><br></pre></td></tr></table></figure><h2 id="使用的主题"><a href="#使用的主题" class="headerlink" title="使用的主题"></a>使用的主题</h2><p><a href="https://www.haomwei.com/technology/maupassant-hexo.html">地址</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
